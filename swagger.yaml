swagger: "2.0"
info:
  title: "Sunglasses.io API"
  description: "API definition for Sunglasses.io"
  version: "1.0.0"
host: "localhost:3001"
basePath: "/api"
schemes:
- "http"
produces:
  - "application/json"
tags:
  - name: Brands
    description: "Access to Brands information."
  - name: Products
    description: "Access to Product information."
  - name: Cart
    description: "Operations for the shopping cart."
  - name: Login
    description: "Operations for user login."
paths:
  /brands:
    get:
      tags:
      - Brands
      summary: "Retrieve all sunglasses brands."
      description: |
        This endpoint returns information on all brands.
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Brands"
  /brands/{brandId}/products:
    get:
      tags:
      - Brands
      summary: "Sunglasses by brand id"
      description: "This endpoint returns all sunglasses by a specific brand id."
      parameters:
      - name: "brandId"
        in: "path"
        description: "Id of brand to return greater than or equal to 1. In returned data, categoryId = brandId."
        required: true
        type: "integer"
        minimum: 1
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Products"
        400:
          description: "Invalid brandId supplied"
        404:
          description: "brandId not found"
  /products:
    get:
      tags: 
        - Products
      summary: "Sunglasses products"
      description: |
        This endpoint returns information on all Sunglasses.io products. If no query string is provided all products will be returned.
      parameters:
      - name: query
        in: query
        description: "Optional search query for search bar. Must be between 1 and 50 characters. If the string is a match for a brand name or product name those results will be returned."
        required: false
        type: string
        minLength: 1
        maxLength: 20
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Products"
        400:
          description: "Invalid search"
        404:
          description: "No results found."
  /login:
    post:
      tags:
        - Login
      summary: "User login to the store."
      description: ''
      parameters:
      - in: body
        name: email/password
        description: "Object with user email and password."
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      responses:
        '200':
          description: "Login successful"
          schema:
            type: object
            properties:
              token:
                type: string
        '401':
          description: "Invalid username or password."
  /me/cart:
    get:
      tags:
         - Cart
      summary: "User cart"
      description: |
        This endpoint returns information on all items in the user cart. Requires user login.
      parameters:
        - name: token
          in: query
          description: Token from successful login.
          required: true
          type: string
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: object
              properties:
                productId:
                  type: number
                quantity:
                 type: number
        403:
          description: "Not authorized. User must login to view cart."
    post:
      tags:
         - Cart
      summary: "This endpoint allows updating of cart contents."
      description: ''
      parameters:
        - name: token
          in: query
          description: Token from successful login.
          required: true
          type: string
        - name: productId/quantity
          in: body
          description: "Object with productId and quantity."
          required: true
          schema:
            type: object
            properties:
              productId:
                type: string
              quantity:
                type: string          
      responses:
        '200':
          description: "Update successful"
        '400':
          description: "Invalid product id or quantity."
        '403':
          description: "Not authorized. User must login to update cart."
        '404':
          description: "ProductId not found in cart"
  /me/cart/{productId}:
    delete:
      tags:
         - Cart
      summary: "Delete cart item by product id."
      description: ""
      parameters:
        - name: token
          in: query
          description: Token from successful login.
          required: true
          type: string
        - name: "productId"
          in: path
          description: "ID of the item to delete."
          required: true
          type: string
      responses:
        '200':
          description: "successful operation."
        '400':
          description: "Invalid prouctdId supplied"
        '401':
          description: "Not authorized. User must login to delete items from the cart."
        '404':
          description: "ProductId not found."         
    post:
      tags:
         - Cart
      summary: "Add an item to the cart by product id"
      description: ''
      parameters:
        - name: token
          in: query
          description: Token from successful login.
          required: true
          type: string
        - name: "productId"
          in: path
          description: "Item to add to cart. Item will be added with a quantity of 1. Attempting to add an item to the cart that already exists will increment the quantity by 1."
          required: true
          type: string
      responses:
        '200':
          description: "successful operation."
        '400':
          description: "Invalid prouctdId supplied."
        '403':
          description: "Not authorized. User must login to update cart."
        '404':
          description: "Product id not found in cart."
definitions:
  Brands:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
          description: "Brand id value"
        name:
          type: string
          description: "Brand name"
  Products:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
          description: "Product id value"
        categoryId:
          type: string
          description: "Category id value"
        name:
          type: string
          description: "Product name"
        description:
          type: string
          description: "Product description"
        price:
          type: number
          description: "Price"
        imageUrls:
          type: array
          items:
            type: string
            description: "Array of product image urls"
  Users:
    type: object
    properties:
      gender:
        type: string
      cart:
        type: array
        items:
          type: object
          properties:
            productId:
              type: number
            quantity:
              type: number
      name:
        type: object
        properties:
          title:
            type: string
          first:
            type: string
          last:
            type: string
      location:
        type: object
        properties:
          street:
            type: string
          city:
            type: string
          state:
            type: string
          postcode:
            type: number
      email:
        type: string
      login:
        type: object
        properties:
          username:
            type: string
          password:
            type: string
          salt:
            type: string
          md5:
            type: string
          sha1:
            type: string
          sha256:
            type: string
      dob:
        type: string
      registered:
        type: string
      phone:
        type: string
      cell:
        type: string
      picture:
        type: object
        properties:
          large:
            type: string
          medium:
            type: string
          small:
            type: string
      nat:
        type: string